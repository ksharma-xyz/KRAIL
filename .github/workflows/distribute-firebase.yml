name: Firebase App Distribution

on:
  workflow_call:
    inputs:
      variant:
        required: true
        type: string

jobs:
  distribute-apk:
    runs-on: ubuntu-latest
    environment: Firebase
    steps:
      - uses: actions/checkout@v4

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: composeApp-${{ inputs.variant }}-apk-${{ github.run_id }}

      - name: List files in extracted artifact
        run: ls

      - name: Download Firebase CLI
        run: curl -sL https://firebase.tools | upgrade=true bash

      - name: Authenticate with Firebase
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT" > gcloud.json

      - name: Set Firebase Project App ID
        run: |
          if [ "${{ inputs.variant }}" = "debug" ]; then
            echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_ANDROID_DEBUG_APP_ID }}" >> $GITHUB_ENV
          else
            echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_ANDROID_PROD_APP_ID }}" >> $GITHUB_ENV
          fi

      - name: Distribute APK to Firebase App Distribution
        env:
          GOOGLE_APPLICATION_CREDENTIALS: gcloud.json
          FIREBASE_APP_ID: ${{ env.FIREBASE_APP_ID }}
        run: |
          if [ "${{ inputs.variant }}" = "debug" ]; then
            firebase appdistribution:distribute composeApp-debug.apk \
              --app "$FIREBASE_APP_ID" \
              --groups "Internal" \
              --release-notes "Debug: ${{ github.event.head_commit.message }}"
          else
            firebase appdistribution:distribute composeApp-release.apk \
              --app "$FIREBASE_APP_ID" \
              --groups "Friends" \
              --release-notes "Release: ${{ github.event.head_commit.message }}"
          fi

      - name: Cleanup sensitive files
        run: rm -f gcloud.json
