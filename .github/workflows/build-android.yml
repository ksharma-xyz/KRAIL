name: Build Android

on:
  workflow_call:
    inputs:
      variant:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Firebase
    steps:
      - uses: actions/checkout@v4

      - name: Setup environment variables
        run: |
          echo "ANDROID_NSW_TRANSPORT_API_KEY=${{ secrets.ANDROID_NSW_TRANSPORT_API_KEY }}" >> $GITHUB_ENV
          echo "IOS_NSW_TRANSPORT_API_KEY=${{ secrets.IOS_NSW_TRANSPORT_API_KEY }}" >> $GITHUB_ENV

      - name: set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21

      - name: Cache Gradle and wrapper
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ""

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Firebase Android (Release) - Google Services.json file
        env:
          DATA: ${{ secrets.FIREBASE_GOOGLE_SERVICES_JSON_RELEASE }}
        run: echo $DATA | base64 -di > composeApp/src/release/google-services.json

      - name: Firebase (Debug) - Google Services.json file
        env:
          DATA: ${{ secrets.FIREBASE_GOOGLE_SERVICES_JSON_DEBUG }}
        run: echo $DATA | base64 -di > composeApp/src/debug/google-services.json

      - name: Clean Gradle Build
        run: ./gradlew clean

      - name: Build ${{ inputs.variant }}
        env:
          ANDROID_NSW_TRANSPORT_API_KEY: ${{ secrets.ANDROID_NSW_TRANSPORT_API_KEY }}
        run: |
          set -e
          if [[ "${{ inputs.variant }}" == "debug" ]]; then
            ./gradlew :composeApp:assembleDebug :composeApp:testDebug -PversionCode="${{ github.run_number }}" --rerun-tasks --stacktrace
          elif [[ "${{ inputs.variant }}" == "release" ]]; then
            ./gradlew :composeApp:assembleRelease :composeApp:bundleRelease -PversionCode="${{ github.run_number }}"
          fi

      - name: Sign Android Release AAB
        if: ${{ inputs.variant == 'release' }}
        id: signed_release_aab
        uses: r0adkll/sign-android-release@v1.0.4
        with:
          releaseDirectory: composeApp/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload Debug APK
        if: ${{ inputs.variant == 'debug' }}
        uses: actions/upload-artifact@v4
        with:
          name: composeApp-debug-apk-${{ github.run_id }}
          path: composeApp/build/outputs/apk/debug/composeApp-debug.apk

      - name: Upload Release APK
        if: ${{ inputs.variant == 'release' }}
        uses: actions/upload-artifact@v4
        with:
          name: composeApp-release-apk-${{ github.run_id }}
          path: composeApp/release/composeApp-release.apk

      - name: Upload Release AAB
        if: ${{ inputs.variant == 'release' }}
        uses: actions/upload-artifact@v4
        with:
          name: composeApp-release-aab-${{ github.run_id }}
          path: ${{ steps.signed_release_aab.outputs.signedReleaseFile }}
