name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, debug-alpha ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Firebase
    needs: setup-gradle # Add the setup-gradle job as a dependency
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/setup_gradle.yml@main # Call reusable workflow

      - name: Firebase (Release) - Google Services.json file
        env:
          DATA: ${{ secrets.FIREBASE_GOOGLE_SERVICES_JSON_RELEASE }}
        run: echo $DATA | base64 -di > app/google-services.json

      - name: Firebase (Debug) - Google Services.json file
        env:
          DATA: ${{ secrets.FIREBASE_GOOGLE_SERVICES_JSON_DEBUG }}
        run: echo $DATA | base64 -di > app/src/debug/google-services.json

      - name: Detekt Checks
        run: ./gradlew detekt

      - name: Build Debug
        run: ./gradlew assembleDebug

      - name: Build Release
        run: ./gradlew assembleRelease

    outputs:
      should_distribute: ${{ steps.build-release.outcome == 'success' }} # Output indicating build success

  trigger_distribution:
    needs: build # Depend on the build job
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Firebase App Distribution
        uses: actions/workflow_dispatch@v3
        with:
          workflow: Firebase App Distribution
          token: ${{ secrets.GITHUB_TOKEN }}
          inputs: ${{ needs.build.outputs.should_distribute == 'true' && 'true' || 'false' }}
